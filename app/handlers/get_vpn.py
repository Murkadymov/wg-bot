import subprocess
from aiogram import Router, types
from aiogram.types import FSInputFile

from app.filters.get_vpn_filter import VPNRequestFilter
from app.keyboards.menu_buttons import menu_buttons
from app.logger.setup_logger import get_logger
from app.models.user import UserModel
from app.vpnmanager.generate_client import generate_client_conf, add_peer, add_peer_persistent
from app.vpnmanager.keys import generate_private_key, generate_public_key
from app.vpnmanager.parser import get_next_free_ip

logger = get_logger(__name__)
router = Router()


@router.message(VPNRequestFilter())
async def get_vpn(message: types.Message):
    kb = menu_buttons()

    user = UserModel(
        id=message.from_user.id,
        username=message.from_user.username,
        full_name=message.from_user.full_name,
    )

    private_key = generate_private_key()
    public_key = generate_public_key(private_key)
    free_ip = get_next_free_ip()

    # –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º client.conf
    try:
        conf_path = generate_client_conf(user.id, private_key, free_ip)
    except OSError as e:
        logger.exception(f"–û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ–∞–π–ª—É –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ client.conf –¥–ª—è user_id={user.id}")
        await message.answer("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å VPN –∫–æ–Ω—Ñ–∏–≥ (–æ—à–∏–±–∫–∞ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã) üôè")
        return
    except Exception as e:
        logger.exception(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ client.conf –¥–ª—è user_id={user.id}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–¥–∞—á–µ –í–ü–ù, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ üôè")
        return

    # –¥–æ–±–∞–≤–ª—è–µ–º peer –≤ wg0
    try:
        add_peer_persistent(public_key, free_ip)
    except subprocess.CalledProcessError:
        logger.exception(f"–ö–æ–º–∞–Ω–¥–∞ wg –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–æ–π –¥–ª—è user_id={user.id}")
        await message.answer("–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ VPN-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä üôè")
        return
    except Exception:
        logger.exception(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ peer –¥–ª—è user_id={user.id}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ VPN, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ üôè")
        return

    # –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –ø–µ—Ä–µ–¥–∞—á–∞ —Ñ–∞–π–ª–∞
    conf_file = FSInputFile(conf_path)

    await message.answer_document(
        document=conf_file,
        caption="–í–æ—Ç —Ç–≤–æ–π VPN-–∫–æ–Ω—Ñ–∏–≥ üöÄ\n–ò–º–ø–æ—Ä—Ç–∏—Ä—É–π –µ–≥–æ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ WireGuard",
        reply_markup=kb,
    )
